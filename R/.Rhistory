site = site,
alive = 1)
}
new_list
alive_dates <- bind_rows(new_list)
alive_dates
alive_dates <- bind_rows(new_list) %>%
mutate(year = year(date))
list <- test %>%
group_by(ind) %>%
group_split()
new_list <- list()
for (i in 1:length(list)){
start_date <- list[[i]]$hatch_date
end_date <- list[[i]]$death_date
new_list[[i]] <- list[[i]] %>%
expand(date = seq(start_date, end_date, by="days"),
ind = ind,
site = site,
alive = 1) %>%
mutate(age = cumsum(alive))
}
alive_dates <- bind_rows(new_list) %>%
mutate(year = year(date))
alive_dates
b_size <- alive_dates %>%
mutate(yday = yday(date)) %>%
group_by(site, year) %>%
summarize(brood = sum(alive))
b_size
b_size <- alive_dates %>%
mutate(yday = yday(date)) %>%
group_by(site, year, yday) %>%
summarize(brood = sum(alive))
b_size
b_size <- alive_dates %>%
mutate(yday = yday(date)) %>%
group_by(site, year, date(date)) %>%
summarize(brood = sum(alive))
b_size
write.csv(alive_dates, "data/03_daily_survival.csv")
alive_dates
broods <- read_csv("data/03_daily_surival.csv") %>% select(-X1)
broods
broods <- read_csv("data/03_daily_survival.csv") %>% select(-X1)
broods
growth <- read_csv("data/03_growth.csv")
growth
# calculate mean weight for all ages
mean_weight <- growth %>% filter(treatment == 0) %>%
group_by(age) %>%
summarize(m_weight = mean(weight, na.rm = TRUE),
sd_weight = sd(weight, na.rm = TRUE))
mean_weight
# calculate mean weight for all ages
mean_weight <- growth %>%
filter(treatment == 0) %>%
group_by(age) %>%
summarize(m_weight = mean(weight, na.rm = TRUE),
sd_weight = sd(weight, na.rm = TRUE)) %>%
mutate(age = age + 1)
mean_weight
broods
mean_weight
broods %>% left_join(mean_weight, by = "age")
nestling_weights <- broods %>% left_join(mean_weight, by = "age")
unique(nestling_weights$ind)
length(unique(nestling_weights$ind))
broods
length(unique(broods$ind))
broods <- read_csv("data/03_daily_survival.csv") %>% select(-X1)
broods
alive_dates
list
new_list <- list()
for (i in 1:length(list)){
start_date <- list[[i]]$hatch_date
end_date <- list[[i]]$death_date
new_list[[i]] <- list[[i]] %>%
expand(date = seq(start_date, end_date, by="days"),
ind = ind,
site = site,
alive = 1) %>%
mutate(age = cumsum(alive))
}
new_list
list
alive_dates %>% filter(ind == "98bk17")
i = 358
start_date <- list[[i]]$hatch_date
start_date
end_date <- list[[i]]$death_date
end_date
new_list[[i]] <- list[[i]] %>%
expand(date = seq(start_date, end_date, by="days"),
ind = ind,
site = site,
alive = 1) %>%
mutate(age = cumsum(alive))
new_list
list <- test %>%
group_by(ind) %>%
group_split()
new_list <- list()
for (i in 1:length(list)){
start_date <- list[[i]]$hatch_date
end_date <- list[[i]]$death_date
new_list[[i]] <- list[[i]] %>%
expand(date = seq(start_date, end_date, by="days"),
ind = ind,
site = site,
alive = 1) %>%
mutate(age = cumsum(alive))
}
alive_dates <- bind_rows(new_list) %>%
mutate(year = year(date))
alive_dates
list
list <- test %>%
group_by(ind) %>%
group_split()
new_list <- list()
for (i in 1:length(list)){
start_date <- list[[i]]$hatch_date
end_date <- list[[i]]$death_date
new_list[[i]] <- list[[i]] %>%
expand(date = seq(as.Date(start_date), as.Date(end_date), by="days"),
ind = ind,
site = site,
alive = 1) %>%
mutate(age = cumsum(alive))
}
new_list
length(list)
list
alive_dates
test %>% filter(ind == "100b14")
test <- dat %>%
mutate(hatch_date = lubridate::ymd(paste0(year, "-07-", july)),
surv = ifelse(last > 29, 1, 0),
death_date = case_when(
surv == 1 ~ hatch_date + 70,
surv == 0 ~ hatch_date + last
)) %>%
select(-july, -year)
list <- test %>%
group_by(ind) %>%
group_split()
new_list <- list()
for (i in 1:length(list)){
start_date <- list[[i]]$hatch_date
end_date <- list[[i]]$death_date
new_list[[i]] <- list[[i]] %>%
expand(date = seq(as.Date(start_date), as.Date(end_date), by="days"),
ind = ind,
site = site,
alive = 1) %>%
mutate(age = cumsum(alive))
}
alive_dates <- bind_rows(new_list) %>%
mutate(year = year(date))
alive_dates
alive_dates
new_list[[i]] <- list[[i]] %>%
expand(date = seq(as.Date(start_date), as.Date(end_date), by="days"),
ind = ind,
site = site,
alive = 1,
surv = surv) %>%
mutate(age = cumsum(alive))
for (i in 1:length(list)){
start_date <- list[[i]]$hatch_date
end_date <- list[[i]]$death_date
new_list[[i]] <- list[[i]] %>%
expand(date = seq(as.Date(start_date), as.Date(end_date), by="days"),
ind = ind,
site = site,
alive = 1,
surv = surv) %>%
mutate(age = cumsum(alive))
}
alive_dates <- bind_rows(new_list) %>%
mutate(year = year(date))
alive_dates
range(alive_dates$surv)
for (i in 1:length(list)){
start_date <- list[[i]]$hatch_date
end_date <- list[[i]]$death_date
new_list[[i]] <- list[[i]] %>%
expand(date = seq(ymd(start_date), ymd(end_date), by="days"),
ind = ind,
site = site,
alive = 1,
surv = surv) %>%
mutate(age = cumsum(alive))
}
alive_dates <- bind_rows(new_list) %>%
mutate(year = year(date))
alive_dates
test
dat <- read_csv("data/00_kfsurv.csv") %>%
select(-relhatch, -hatch, -yday, -nestyear, -treatment)
test <- dat %>%
mutate(hatch_date = lubridate::ymd(paste0(year, "-07-", july)),
surv = ifelse(last > 29, 1, 0),
death_date = case_when(
surv == 1 ~ hatch_date + 70,
surv == 0 ~ hatch_date + last
)) %>%
select(-july, -year)
test
test <- dat %>%
mutate(hatch_date = lubridate::ymd(paste0(year, "-07-", july)),
surv = ifelse(last > 29, 1, 0),
death_date = case_when(
surv == 1 ~ hatch_date + 70,
surv == 0 ~ hatch_date + last
)) %>%
mutate(alive_time = difftime(death_date, hatch_date, units = "days")) %>%
select(-july, -year)
test
test <- dat %>%
mutate(hatch_date = lubridate::ymd(paste0(year, "-07-", july)),
surv = ifelse(last > 29, 1, 0),
death_date = case_when(
surv == 1 ~ hatch_date + 70,
surv == 0 ~ hatch_date + last
)) %>%
mutate(alive_time = as.numeric(difftime(death_date, hatch_date, units = "days"))) %>%
select(-july, -year)
test
range(test$alive_time)
table(test$alive_time)
test %>% filter(alive_time == 29)
list <- test %>%
filter(alive_time > 1) %>%
group_by(ind) %>%
group_split()
new_list <- list()
for (i in 1:length(list)){
start_date <- list[[i]]$hatch_date
end_date <- list[[i]]$death_date
new_list[[i]] <- list[[i]] %>%
expand(date = seq(ymd(start_date), ymd(end_date), by="days"),
ind = ind,
site = site,
alive = 1,
surv = surv) %>%
mutate(age = cumsum(alive))
}
alive_dates <- bind_rows(new_list) %>%
mutate(year = year(date))
alive_dates
b_size <- alive_dates %>%
mutate(yday = yday(date)) %>%
group_by(site, year, date(date)) %>%
summarize(brood = sum(alive))
b_size
write.csv(alive_dates, "data/03_daily_survival.csv")
broods <- read_csv("data/03_daily_survival.csv") %>% select(-X1)
growth <- read_csv("data/03_growth.csv")
# calculate mean weight for all ages
mean_weight <- growth %>%
filter(treatment == 0) %>%
group_by(age) %>%
summarize(m_weight = mean(weight, na.rm = TRUE),
sd_weight = sd(weight, na.rm = TRUE)) %>%
mutate(age = age + 1)
nestling_weights <- broods %>% left_join(mean_weight, by = "age")
nestling_weights
growth
growth_ind <- unique(growth$ind)
broods$ind
surv_ind <- unique(broods$ind)
setdiff(growth_ind, surv_ind)
setdiff(surv_ind, growth_ind)
nestling_weights
nestling_weights <- broods %>% left_join(mean_weight, by = "age")
nestling_weights
write.csv(nestling_weights, "data/03a_chick_weights.csv")
b_size <- nestling_weights %>%
group_by(site, date) %>%
summarize(brood = sum(alive),
brood_weight = sum(m_weight),
var = sqrt(sum(sd_weight^2)))
b_size
write.csv(b_size, "data/03b_brood_weights.csv")
varsens <- read_csv("data/00_varsens.csv")
varsens
names(varsens)
varsens <- read_csv("data/00_varsens.csv") %>%
select(site, date, year, start, chicks)
varsens
varsens <- read_csv("data/00_varsens.csv") %>%
select(site, date, year, chicks)
varsens
varsens <- read_csv("data/00_varsens.csv") %>%
select(site, date, chicks)
varsens
b_size
x <- b_size %>% left_join(varsens, by = c("site", "date"))
x
x %>%
filter(!is.na(chicks)) %>%
mutate(diff = brood - chicks) %>%
filter(diff != 0)
varsens
x %>%
filter(!is.na(chicks)) %>%
mutate(diff = brood - chicks) %>%
filter(diff != 0 & year == 2017)
x %>%
filter(!is.na(chicks)) %>%
mutate(diff = brood - chicks) %>%
filter(diff != 0 )
x %>%
filter(!is.na(chicks)) %>%
mutate(diff = brood - chicks) %>%
filter(diff != 0) %>%
filter(year(date) == 2017)
varsens
varsens <- read_csv("data/00_varsens.csv")
varsens
varsens %>%
filter(site == 1 & year == 2017)
View(varsens %>%
filter(site == 1 & year == 2017))
x %>%
filter(!is.na(chicks)) %>%
mutate(diff = brood - chicks) %>%
filter(diff != 0) %>%
filter(year(date) == 2017 & site != 1)
x %>%
filter(!is.na(chicks)) %>%
mutate(diff = brood - chicks) %>%
filter(diff != 0) %>%
arrange(desc(diff))
b_size
b_size %>%
filter(year(date) == 2017 & site == 28)
x
b_size %>%
filter(year(date) == 2017) %>%
ggplot() +
geom_line(aes(x = date, y = brood_weight)) +
facet_grid(~site) +
theme_nuwcr()
b_size %>%
filter(year(date) == 2017) %>%
ggplot() +
geom_line(aes(x = date, y = brood_weight)) +
facet_grid(~site) +
theme_nuwcru()
b_size %>%
filter(year(date) == 2017) %>%
ggplot() +
geom_line(aes(x = date, y = brood_weight)) +
facet_grid(~site) +
nuwcru::theme_nuwcru()
b_size %>%
filter(year(date) == 2017) %>%
ggplot() +
geom_line(aes(x = date, y = brood_weight)) +
facet_grid(site~.) +
nuwcru::theme_nuwcru()
b_size %>%
filter(year(date) == 2017) %>%
ggplot() +
geom_line(aes(x = date, y = brood_weight, group = site)) +
nuwcru::theme_nuwcru()
b_size %>%
filter(year(date) == 2016) %>%
ggplot() +
geom_line(aes(x = date, y = brood_weight, group = site)) +
nuwcru::theme_nuwcru()
b_size %>%
filter(year(date) == 2015) %>%
ggplot() +
geom_line(aes(x = date, y = brood_weight, group = site)) +
nuwcru::theme_nuwcru()
b_size %>%
filter(year(date) == 2014) %>%
ggplot() +
geom_line(aes(x = date, y = brood_weight, group = site)) +
nuwcru::theme_nuwcru()
b_size %>%
filter(year(date) == 2013) %>%
ggplot() +
geom_line(aes(x = date, y = brood_weight, group = site)) +
nuwcru::theme_nuwcru()
b_size %>%
filter(year(date) == 2017) %>%
ggplot() +
geom_line(aes(x = date, y = brood_weight, group = site)) +
nuwcru::theme_nuwcru()
# Load and prepare data ---------------------------------------------------
dat <- do.call(rbind,
lapply(c(#"data/02_2013_prop.csv","data/02_2014_prop.csv",
"data/02_2015_prop.csv", "data/02_2016_prop.csv","data/02_2017_prop.csv"), read_csv)) %>%
select(-X1, -trt) %>% mutate(yday = yday(date))
chicks <- read_csv("data/03a_chick_weights.csv")
trt <- read_csv("data/00_trt.csv")
chicks
# broodsize by n, and by weight
brood_size <- chicks %>%
mutate(yday = yday(date)) %>%
group_by(site, year, yday) %>%
summarize(b_size = sum(alive, na.rm = TRUE),
b_weight = sum(m_weight, na.rm = TRUE),
b_var = sqrt(sum(sd_weight^2)))
brood_size
# merge with proportion
dat <- dat %>% left_join(brood_size, by = c("site", "year", "yday"))
dat
dat <- dat %>% left_join(trt, by = c("site", "year")) %>% filter(!is.na(b_size))
trt
trt <- read_csv("data/00_trt.csv") %>% rename("site" = "nest")
dat <- dat %>% left_join(trt, by = c("site", "year")) %>% filter(!is.na(b_size))
d
dat
dat_na <- dat %>%
filter(!is.na(precip) & b_size > 0) %>%
mutate(minutes = prop * 1440)
hist(dat_na$minutes)
hist(log(dat_na$minutes))
dat_na$minutes
hist(log(dat_na$minutes))
hist(log(dat_na$minutes))
m1 <- brm(
bf(minutes ~ precip + b_weight + (1 | year) + (1 | site)),
data = dat_na,
family = gamma(),
warmup = 1000,
iter = 2500,
chains = 2,
control = list(adapt_delta = 0.99),
cores = 2)
m1 <- brms::brm(
bf(minutes ~ precip + b_weight + (1 | year) + (1 | site)),
data = dat_na,
family = gamma(),
warmup = 1000,
iter = 2500,
chains = 2,
control = list(adapt_delta = 0.99),
cores = 2)
m1 <- brms::brm(
minutes ~ precip + b_weight + (1 | year) + (1 | site),
data = dat_na,
family = gamma(),
warmup = 1000,
iter = 2500,
chains = 2,
control = list(adapt_delta = 0.99),
cores = 2)
m1 <- brms::brm(
minutes ~ precip + b_weight + (1 | year) + (1 | site),
data = dat_na,
family = gamma(link = "inverse"),
warmup = 1000,
iter = 2500,
chains = 2,
control = list(adapt_delta = 0.99),
cores = 2)
m1 <- brms::brm(
minutes ~ precip + b_weight + (1 | year) + (1 | site),
data = dat_na,
family = gamma("inverse"),
warmup = 1000,
iter = 2500,
chains = 2,
control = list(adapt_delta = 0.99),
cores = 2)
m1 <- brms::brm(
minutes ~ precip + b_weight + (1 | year) + (1 | site),
data = dat_na,
family = gamma("identity"),
warmup = 1000,
iter = 2500,
chains = 2,
control = list(adapt_delta = 0.99),
cores = 2)
m1 <- brms::brm(
minutes ~ precip + b_weight + (1 | year) + (1 | site),
data = dat_na,
family = gamma(link = "identity"),
warmup = 1000,
iter = 2500,
chains = 2,
control = list(adapt_delta = 0.99),
cores = 2)
m1 <- brms::brm(
minutes ~ precip + b_weight + (1 | year) + (1 | site),
data = dat_na,
family = Gamma(),
warmup = 1000,
iter = 2500,
chains = 2,
control = list(adapt_delta = 0.99),
cores = 2)
dat_na <- dat %>%
filter(!is.na(precip) & b_size > 0) %>%
mutate(minutes = prop * 1440+1)
m1 <- brms::brm(
minutes ~ precip + b_weight + (1 | year) + (1 | site),
data = dat_na,
family = Gamma(),
warmup = 1000,
iter = 2500,
chains = 2,
control = list(adapt_delta = 0.99),
cores = 2)
